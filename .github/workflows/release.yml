on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container: zephyrprojectrtos/ci:latest
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: example-application
      - name: Initialize
        working-directory: example-application
        run: |
          west init -l .
          west update
      - name: Build firmware
        working-directory: example-application
        run: |
          west build -b stm32l496_cell app
          cp example-application/build/zephyr/zephyr.bin ${{ github.sha }}.bin
      - name: List
        working-directory: example-application
        run: |
          ls -a
      - name: Build signed firmware
        working-directory: example-application
        run: |
          west build -b stm32l496_cell app -- -DCONFIG_MCUBOOT_SIGNATURE_KEY_FILE=\"example-application/conf/root-rsa-2048.pem\" -DEXTRA_CONF_FILE=mcumgr.conf
          cp example-application/build/zephyr/zephyr.bin ${{ github.sha }}-signed.bin
      # - name: Release
      #   uses: ncipollo/release-action@v1.13.0
      #   with:
      #     artifacts: "example-application/build/zephyr/zephyr.bin"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            example-application/build/zephyr/zephyr.bin
            ${{ github.sha }}.bin
            ${{ github.sha }}-signed.bin
      # TODO(mskobov): Create release and upload release are deprecated; replace with other actions
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: ./example-application/build/zephyr/zephyr.bin
      #     asset_name: ${{ github.ref }}.bin
      #     asset_content_type: application/bin
